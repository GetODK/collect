machine:
    environment:
        # Set memory limits for the JVM
        # https://circleci.com/docs/oom/#setting-memory-limits-for-the-jvm
        _JAVA_OPTIONS: "-Xms512m -Xmx1024m"

        # Out of memory errors in Android builds
        # https://circleci.com/docs/oom/#out-of-memory-errors-in-android-builds
        # https://docs.gradle.org/current/userguide/build_environment.html
        GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2560M -XX:+HeapDumpOnOutOfMemoryError"'
        
dependencies:
    pre:
        # We need latest versions of: tools,platform-tools,build-tools-25.0.2,android-25,extra-google-m2repository,extra-android-m2repository
        # But there some already installed: https://circleci.com/docs/1.0/build-image-trusty/#android
        # Don't cache SDKs because it's faster to download than to restore from cache
        - echo y | android update sdk --no-ui --all --filter tools,platform-tools,build-tools-25.0.2
test:

    override:
        # Disable incremental dexing to speed up clean builds
        # https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/2-5-alpha-gradle-plugin/trying-gradle-plugin-2-5
        - ./gradlew lintDebug -Pandroid.useDexArchive=false
        - ./gradlew testDebugUnitTest -Pandroid.useDexArchive=false 
        #- ./gradlew assembleDebug -Pandroid.useDexArchive=false:
        #    timeout: 900

    post:
        # APKs
        # - cp -r collect_app/build/outputs/apk/ $CIRCLE_ARTIFACTS

        # Tests
        - mkdir -p $CIRCLE_TEST_REPORTS/junit/
        - find . -type f -regex ".*/collect_app/build/test-results/.*.xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;

        # Lint
        - mkdir -p $CIRCLE_TEST_REPORTS/lint/
        - find . -type f -regex ".*/collect_app/build/reports/lint-results-*.*" -exec cp {} $CIRCLE_TEST_REPORTS/lint/ \;